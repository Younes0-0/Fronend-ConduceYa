---
import Layout from '@layouts/Layout.astro';
import Menu from '@components/layout/Menu.astro';
import Footer from '@components/layout/Footer.astro';
import Hero from '@components/permisos/Hero.astro';
import { SignOut } from 'auth-astro/components';
import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);
//TODO: Implementar autenticación y autorización real

const usuario = {
  nombre: "Younes Demraoui",
  role: "admin",
  email: "miguel.admin@example.com",
  telefono: "600112233",
  date_joined: "2023-09-10T08:30:00Z",
  usuariosGestionados: 120,
  profesoresActivos: 8,
  tareasPendientes: [
    {
      id: 1,
      descripcion: "Aprobar nueva inscripción de profesor",
      fecha: "2025-05-30"
    },
    {
      id: 2,
      descripcion: "Revisar incidencias de pagos",
      fecha: "2025-05-31"
    }
  ],
  actividadReciente: [
    {
      fecha: "2025-05-27",
      tipo: "Usuario creado",
      detalle: "Nuevo alumno: Juan López"
    },
    {
      fecha: "2025-05-25",
      tipo: "Pago gestionado",
      detalle: "Pago recibido de María G."
    }
  ]
};
const funcionesAdmin = [
  {
    nombre: "Gestión de Usuarios",
    descripcion: "Alta, edición y consulta de usuarios/alumnos.",
    icono: "bi-people-fill",
    url: "/admin/usuarios/"
  },
  {
    nombre: "Gestión de Profesores",
    descripcion: "Control de altas/bajas, horarios y asignaciones.",
    icono: "bi-person-badge-fill",
    url: "/admin/profesores/"
  },
  {
    nombre: "Clases Prácticas",
    descripcion: "Control y planificación de clases y horarios.",
    icono: "bi-car-front-fill",
    url: "/admin/practicas/"
  },
  {
    nombre: "Citas y Reservas",
    descripcion: "Gestión de citas para exámenes y reservas de clases.",
    icono: "bi-calendar-check-fill",
    url: "/admin/citas/"
  },
  {
    nombre: "Pagos y Cobros",
    descripcion: "Gestión y revisión de pagos de alumnos y profesores.",
    icono: "bi-cash-coin",
    url: "/admin/pagos/"
  },
  {
    nombre: "Documentos",
    descripcion: "Gestión y verificación de documentos oficiales.",
    icono: "bi-file-earmark-text-fill",
    url: "/admin/documentos/"
  }
];
---

<Layout title="Panel de Administración">
  <Menu imageSrc="/img/logo-letras.png" imageAlt="logo de la empresa"/>
  <Hero 
    title={usuario.nombre}
    subtitle="Administrador"
    buttonText="Editar Perfil"
    imageSrc="./img/hero-image.jpg"
  />
  <main class="container py-4">
    <div class="row g-4">
      <div class="col-12">
        <div class="card shadow rounded-4 mb-4">
          <div class="card-body">
            <h2 class="card-title h5 border-bottom pb-2 mb-3 text-primary">Funciones administrativas</h2>
            <div class="row g-3">
              {funcionesAdmin.map(funcion => (
                <div class="col-md-4">
                  <div class="card border-0 h-100 shadow-sm">
                    <div class="card-body d-flex flex-column align-items-start">
                      <div class="mb-3 fs-1 text-primary">
                        <i class={`bi ${funcion.icono}`}></i>
                      </div>
                      <h5 class="card-title">{funcion.nombre}</h5>
                      <p class="card-text small">{funcion.descripcion}</p>
                      <a href={funcion.url} class="btn btn-outline-primary mt-auto w-100">
                        Ir a {funcion.nombre}
                      </a>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card shadow rounded-4">
          <div class="card-body">
            <h2 class="card-title h5 border-bottom pb-2 mb-3 text-primary">Información Personal</h2>
            <ul class="list-unstyled mb-0">
              <li class="mb-2">
                <strong class="text-secondary">Email:</strong> {usuario.email}
              </li>
              <li class="mb-2">
                <strong class="text-secondary">Teléfono:</strong> {usuario.telefono}
              </li>
              <li class="mb-2">
                <strong class="text-secondary">Fecha de registro:</strong> {new Date(usuario.date_joined).toLocaleDateString('es-ES')}
              </li>
              <li class="mb-2">
                <strong class="text-secondary">Tipo de usuario:</strong>
                <span class="badge bg-warning text-dark ms-2 text-capitalize">Administrador</span>
              </li>
            </ul>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card shadow rounded-4">
          <div class="card-body">
            <h2 class="card-title h5 border-bottom pb-2 mb-3 text-primary">Resumen</h2>
            <div class="row text-center">
              <div class="col-6 mb-3">
                <div class="h4 mb-0 fw-bold text-primary">{usuario.usuariosGestionados}</div>
                <div class="text-muted small">Usuarios gestionados</div>
              </div>
              <div class="col-6 mb-3">
                <div class="h4 mb-0 fw-bold text-primary">{usuario.profesoresActivos}</div>
                <div class="text-muted small">Profesores activos</div>
              </div>
            </div>
            <SignOut class="btn btn-outline-primary w-100 mt-2">Cerrar sesión</SignOut>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card shadow rounded-4">
          <div class="card-body">
            <h2 class="card-title h5 border-bottom pb-2 mb-3 text-primary">Tareas Pendientes</h2>
            <ul class="list-group">
              {usuario.tareasPendientes.map(tarea => (
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  <span>
                    <i class="bi bi-exclamation-circle-fill text-warning me-2"></i>
                    {tarea.descripcion}
                  </span>
                  <span class="badge bg-light text-secondary">{tarea.fecha}</span>
                </li>
              ))}
              {usuario.tareasPendientes.length === 0 && (
                <li class="list-group-item text-muted">Sin tareas pendientes.</li>
              )}
            </ul>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card shadow rounded-4">
          <div class="card-body">
            <h2 class="card-title h5 border-bottom pb-2 mb-3 text-primary">Actividad Reciente</h2>
            <ul class="list-group">
              {usuario.actividadReciente.map(act => (
                <li class="list-group-item">
                  <div class="d-flex justify-content-between">
                    <span class="fw-semibold">{act.fecha}</span>
                    <span class="badge bg-info text-dark">{act.tipo}</span>
                  </div>
                  <div class="small text-muted">{act.detalle}</div>
                </li>
              ))}
              {usuario.actividadReciente.length === 0 && (
                <li class="list-group-item text-muted">No hay actividad reciente.</li>
              )}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </main>
  <Footer/>
</Layout>
