---
import Layout from '@layouts/Layout.astro';
import Menu from '@components/layout/Menu.astro';
import Footer from '@components/layout/Footer.astro';
import { authFetch } from '@/utils/authFetch';

const existingToken = Astro.cookies.get('jwt_token')?.value;
if (!existingToken) {
  return Astro.redirect('/login');
}


interface User {
  id: number;
  username: string;
  first_name: string;
  last_name: string;
  rol: string;
}

interface Permiso {
  tipo: string;
  fecha_obtencion: string;
  vigente: boolean;
}

interface Profesor {
  id: number;
  usuario: User;
  permisos: Permiso[];
}

let profesores: Profesor[] = [];

try {
  const apiUrl = `https://backend-conduceya.onrender.com/api/usuarios/profesores/`;
  const data = await authFetch(Astro, apiUrl);
  profesores = data.results as Profesor[];
} catch (e) {
  const error = e as Error;
  if (error.message === 'NO_TOKEN' || error.message === 'UNAUTHORIZED') {
    return Astro.redirect('/login');
  }
  // Puedes mostrar un error genérico o manejar otros casos aquí
}
---

<Layout title="Gestión de Profesores">
  <Menu imageSrc="/img/logo-letras.png" imageAlt="logo de la empresa"/>
  <main class="container py-4">
    <h1 class="mb-4 text-primary fw-bold">Gestión de Profesores</h1>
    <p class="mb-3 text-secondary">Administra profesores, asignaciones, permisos y datos personales.</p>
    <div class="table-responsive">
      <table class="table table-hover align-middle bg-white rounded-4 shadow-sm">
        <thead class="table-light">
          <tr>
            <th>ID</th>
            <th>Usuario</th>
            <th>Nombre</th>
            <th>Apellidos</th>
            <th>Rol</th>
            <th>Permisos</th>
            <th>Acciones</th>
          </tr>
        </thead>
        <tbody>
          {profesores.map((profesor) => (
            <tr>
              <td>{profesor.id}</td>
              <td>{profesor.usuario.username}</td>
              <td>{profesor.usuario.first_name}</td>
              <td>{profesor.usuario.last_name}</td>
              <td>
                <span class={`badge ${profesor.usuario.rol === 'PROFESOR' ? 'bg-info text-dark' : 'bg-secondary'}`}>
                  {profesor.usuario.rol}
                </span>
              </td>
              <td>
                <ul class="mb-0 ps-3">
                  {profesor.permisos.map((permiso) => (
                    <li>
                      <span class="fw-bold">{permiso.tipo}</span> - {permiso.fecha_obtencion} - 
                      <span class={permiso.vigente ? "text-success ms-1" : "text-danger ms-1"}>
                        {permiso.vigente ? "Vigente" : "No vigente"}
                      </span>
                    </li>
                  ))}
                </ul>
              </td>
              <td>
                <a href={`/admin/profesores/${profesor.id}`} class="btn btn-sm btn-outline-primary me-2">Ver</a>
                <a href={`/admin/profesores/${profesor.id}/editar`} class="btn btn-sm btn-outline-secondary me-2">Editar</a>
                <button class="btn btn-sm btn-outline-danger" disabled>Eliminar</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    <a href="/admin/profesores/nuevo" class="btn btn-primary mt-3">Añadir Profesor</a>
  </main>
  <Footer/>
</Layout>
